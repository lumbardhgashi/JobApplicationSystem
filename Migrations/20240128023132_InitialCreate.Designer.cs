// <auto-generated />
using JobApplicationSystem.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobApplicationSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240128023132_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplicantEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplicationStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId")
                        .IsUnique();

                    b.HasIndex("ReviewApplicationId")
                        .IsUnique();

                    b.ToTable("ApplicationStatuses", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("JobPostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("JobPostId");

                    b.ToTable("Applies", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.CompanyEntity", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumriTelefonit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sektori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.DepartmentEntity", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("DrejtoriDepartamentit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumriPunonjesve")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.EducationHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("AvgGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("EducationHistories", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ExperienceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("Experiences", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.HRManagerEntity", b =>
                {
                    b.Property<int>("HRManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRManagerId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HRManagerId");

                    b.HasIndex("CompanyId");

                    b.ToTable("HrManagers", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.JobPostingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HrManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Requriments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HrManagerId");

                    b.ToTable("JobPostings", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ReviewApplicationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplyId")
                        .HasColumnType("int");

                    b.Property<int>("HrManagerId")
                        .HasColumnType("int");

                    b.Property<string>("PointOfReview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplyId")
                        .IsUnique();

                    b.HasIndex("HrManagerId");

                    b.ToTable("ReviewApplications", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.SkillSetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Pointer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("SkillSets", (string)null);
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplicationStatusEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.ApplicantEntity", "Applicant")
                        .WithOne("ApplicationStatus")
                        .HasForeignKey("JobApplicationSystem.Entities.ApplicationStatusEntity", "ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JobApplicationSystem.Entities.ReviewApplicationEntity", "ReviewApplication")
                        .WithOne("ApplicationStatus")
                        .HasForeignKey("JobApplicationSystem.Entities.ApplicationStatusEntity", "ReviewApplicationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("ReviewApplication");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplyEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.ApplicantEntity", "Applicant")
                        .WithMany("Applies")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JobApplicationSystem.Entities.JobPostingEntity", "JobPosting")
                        .WithMany("Applies")
                        .HasForeignKey("JobPostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");

                    b.Navigation("JobPosting");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.DepartmentEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.CompanyEntity", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.EducationHistoryEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.ApplicantEntity", "Applicant")
                        .WithMany("Educations")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ExperienceEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.ApplicantEntity", "Applicant")
                        .WithMany("Experiences")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.HRManagerEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.CompanyEntity", "Company")
                        .WithMany("HRManagers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.JobPostingEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.DepartmentEntity", "Department")
                        .WithMany("JobPosting")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JobApplicationSystem.Entities.HRManagerEntity", "HrManager")
                        .WithMany("JobPosting")
                        .HasForeignKey("HrManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("HrManager");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ReviewApplicationEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.ApplyEntity", "Apply")
                        .WithOne("ReviewApplication")
                        .HasForeignKey("JobApplicationSystem.Entities.ReviewApplicationEntity", "ApplyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("JobApplicationSystem.Entities.HRManagerEntity", "HRManager")
                        .WithMany("ReviewApplications")
                        .HasForeignKey("HrManagerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apply");

                    b.Navigation("HRManager");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.SkillSetEntity", b =>
                {
                    b.HasOne("JobApplicationSystem.Entities.ApplicantEntity", "Applicant")
                        .WithMany("Skills")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplicantEntity", b =>
                {
                    b.Navigation("ApplicationStatus")
                        .IsRequired();

                    b.Navigation("Applies");

                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ApplyEntity", b =>
                {
                    b.Navigation("ReviewApplication")
                        .IsRequired();
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.CompanyEntity", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("HRManagers");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.DepartmentEntity", b =>
                {
                    b.Navigation("JobPosting");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.HRManagerEntity", b =>
                {
                    b.Navigation("JobPosting");

                    b.Navigation("ReviewApplications");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.JobPostingEntity", b =>
                {
                    b.Navigation("Applies");
                });

            modelBuilder.Entity("JobApplicationSystem.Entities.ReviewApplicationEntity", b =>
                {
                    b.Navigation("ApplicationStatus")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
